nelmio_api_doc:
    documentation:
        info:
            title: Trottin'Old API
            description: This is an awesome E-Commerce API!
            version: 1.0.0
        components:
          securitySchemes:
            bearerAuth:           
              type: http
              scheme: bearer
              bearerFormat: JWT 
          schemas:
            GeneralError:
              type: object
              properties:
                error:
                  type: string
                details:
                  type: string
          responses:
            UnauthorizedError:
              description: Access token is missing or invalid
            CartUpdateSuccess:
              description: Success
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      message:
                        type: string
                      cart:
                        ref: "#/components/schemas/Cart"
            ProductUpdateSuccess:
              description: Success
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      message:
                        type: string
                      product:
                        ref: "#/components/schemas/Product"
        # )
        # By default all routes are secured and require a bearer token
        security:
            - bearerAuth: []
        paths:
          /api/login:
            get:
              security: 
                name: null
              tags: 
                - Authentication
              description: Retrieve a bearer token using registered user credentials (login/password)
              requestBody:
                description: User credentials
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        login:
                          type: string
                        password:
                          type: string
              responses:
                '200':
                  description: 'Success'
                  content:
                    application/json:
                      schema:
                        type: object
                        properties:
                          token:
                            type: string
                '401':
                  description: 'Invalid credentials'
                  content:
                    application/json:
                      schema:
                        type: object
                        properties:
                          error:
                            type: string
    areas: # to filter documented areas
        path_patterns:
            - ^/api/(?!doc(\.json)?$) # Accepts routes under /api except /api/doc
