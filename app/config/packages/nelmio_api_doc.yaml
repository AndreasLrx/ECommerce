nelmio_api_doc:
    documentation:
        info:
            title: Trottin'Old API
            description: This is an awesome E-Commerce API!
            version: 1.0.0
        components:
          securitySchemes:
            bearerAuth:           
              type: http
              scheme: bearer
              bearerFormat: JWT 
          schemas:
            BasicError:
              type: object
              properties:
                error:
                  type: string
            GeneralError:
              type: object
              properties:
                error:
                  type: string
                details:

          examples:
            ProductValidationErrorExamples:
              summary: "Invalid price"
              value: '{"error":"Parameters validation failed","details":[{"property":"price","value":"toto","message":"This value should be of type float."}]}'
            ProductNotFoundErrorExample:
              summary: "Product not found"
              value: '{"error":"Not Found"}'
            OrderNotFoundErrorExample:
              summary: "Order not found"
              value: '{"error":"Not Found"}'
            UserValidationErrorExample:
              summary: "Invalid mail"
              value: '{"error":"Parameters validation failed","details":[{"property":"email","value":"totogmail.com","message":"This value is not a valid email address."}]}'


          responses:
            UnauthorizedError:
              description: Access token is missing or invalid
            CartUpdateSuccess:
              description: Success
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      message:
                        type: string
                        default: Successfully added/removed product with id 1 in/from the cart
                      cart:
                        ref: "#/components/schemas/Cart"
            ProductUpdateSuccess:
              description: Success
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      message:
                        type: string
                        default: Successfully created new product / Successfully updated product with id 1
                      product:
                        ref: "#/components/schemas/Product"
        # )
        # By default all routes are secured and require a bearer token
        security:
            - bearerAuth: []
        paths:
          /api/login:
            get:
              security: 
                name: null
              tags: 
                - Authentication
              description: Retrieve a bearer token using registered user credentials (login/password)
              requestBody:
                description: User credentials
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        login:
                          type: string
                          default: foobar
                        password:
                          type: string
                          default: my_super_password
              responses:
                '200':
                  description: 'Success'
                  content:
                    application/json:
                      schema:
                        type: object
                        properties:
                          token:
                            type: string
                            default: "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE2ODE4MzA1jTYsImV4cCI6MTY4MTgzNDExNiwicm9sZXMiOlsiUk9MRV9VU0VSIl0sInVzZXJuYW1lIjoidG90bzYifQ.hZsATF6Dw4hHjlOK0ijLOUn0cPaciC2Hxpr1kCbeeoSry-VDWfNNmY24PK33SGqSxOitWf3cA5LFlKu8m18gC9q3WN0KpzKyFXJNn8syx0qwn4bBzDLkEmhKqnQK0JpyqW9T3rORTyv6uayLKi_dPRJyoENy1pvFU_c7ZFPJ9tXlrYFDi0fbiSdqOgW0lNiptJ3IvLBp-Lc5ot0-22XZ8j_FHjM3OdMiY6qnSp7EGay-c6fi69D2dLiCHmcaAInVQfOaIynFkV0-ITmrkJ7u6_tjhItG6ic7iCryiy52_dDaCiPyu0zO6X-Lo8NCnZ2UOwuJ36cY7qvtILxsVhsj6w"
                '401':
                  description: 'Invalid credentials'
                  content:
                    application/json:
                      schema:
                        type: object
                        properties:
                          error:
                            type: string
                            default: Invalid credentials
    areas: # to filter documented areas
        path_patterns:
            - ^/api/(?!doc(\.json)?$) # Accepts routes under /api except /api/doc
